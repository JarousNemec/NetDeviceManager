version: "3.7"

services:
  
  web:
#    restart: always
    build:
      context: .
      dockerfile: ./NetDeviceManager.Web/Dockerfile
    volumes:
      - "web-storage:/app/data"
    ports:
      - "10002:8080"
    depends_on:
      database:
        condition: service_healthy
        
  snmp-agent:
#    restart: always
    build:
      context: .
      dockerfile: ./NetDeviceManager.ScheduledSnmpAgent/Dockerfile
    depends_on:
      database:
        condition: service_healthy
        
  syslog-server:
#    restart: always
    build:
      context: .
      dockerfile: ./NetDeviceManager.SyslogServer/Dockerfile
    ports:
      - "514:514/udp"
    depends_on:
      database:
        condition: service_healthy
      
  api:
#    restart: always
    build:
      context: .
      dockerfile: ./NetDeviceManager.Api/Dockerfile
    ports:
      - "10001:8080"
      - "10011:8081"  
    volumes:
      - ./reports:/app/reports
    depends_on:
      database:
        condition: service_healthy
        
  reporter:
#    restart: always
    build:
      context: .
      dockerfile: ./NetDeviceManager.ScheduledDatabaseReporter/Dockerfile
    volumes:
      - ./reports:/app/reports
    depends_on:
      database:
        condition: service_healthy
        
  database:
    image: postgres:16.2
    restart: always
    volumes:
      - "db-storage:/var/lib/postgresql/data"
    environment:
      POSTGRES_USER: manager
      POSTGRES_PASSWORD: Heslo1234.
      POSTGRES_DB: ManagerData
    ports:
      - "10000:5432"
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U manager -d ManagerData'"]
      interval: 10s
      timeout: 3s
      retries: 3

volumes:
  web-storage:
    driver: local
  db-storage:
    driver: local
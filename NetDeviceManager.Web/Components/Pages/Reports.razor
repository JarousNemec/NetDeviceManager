@page "/reports"
@using System.Net
@using System.Text.Json
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Identity
@using NetDeviceManager.Database.Identity
@using NetDeviceManager.Lib.Extensions
@using NetDeviceManager.Lib.GlobalConstantsAndEnums
@attribute [Authorize]
<PageTitle>Reports</PageTitle>
<div>
    <h2>Reports for download</h2>

    <Grid @ref="grid"
          TItem="string"
          Class="table table-hover table-bordered table-striped"
          DataProvider="ReportsDataProvider"
          Responsive="true">

        <GridColumn TItem="string" HeaderText="Report date" PropertyName="ReportDate">
            @context
        </GridColumn>
        <GridColumn TItem="string" HeaderText="Action" PropertyName="action">
            <div class="btn-container-modalform">
                <a href=@($"http://api/Api/GetReport?id={context}&key={_key}") target="_blank" class="btn-action btn-style-normal font-16">Download</a>
            </div>
        </GridColumn>
    </Grid>


</div>

<style>
    .filter-form {
        display: flex;
        align-items: flex-end;
        margin-bottom: 8px;
    }
</style>

@code{
    
    BlazorBootstrap.Grid<string> grid = default!;
    
    [Inject] public HttpClient ApiClient { get; set; }
    [Inject] public UserManager<ApplicationUser> UserManager { get; set; }
    [Inject] public IHttpContextAccessor Accessor { get; set; }
    private string? _key = string.Empty;
    private IEnumerable<string> _reports = default!;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);

        if (Accessor.HttpContext?.User != null)
            _key = UserManager.GetUserAsync(Accessor.HttpContext.User).Result?.ApiKey;
    }

    private async Task<GridDataProviderResult<string>> ReportsDataProvider(GridDataProviderRequest<string> request)
    {
        ApiClient.DefaultRequestHeaders.Add(ApiConstants.ApiKey, _key);
        var uri = new Uri("http://api/Api/GetReportsList");
        _reports = await ApiClient.GetFromJsonAsync<string[]>(uri) ?? new string[] { };
        return await Task.FromResult(request.ApplyTo(_reports));
    }
}
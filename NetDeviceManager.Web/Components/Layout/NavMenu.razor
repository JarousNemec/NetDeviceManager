@using NetDeviceManager.Web.Components.Logos
@implements IDisposable

@inject NavigationManager NavigationManager
<AuthorizeView>
    <Authorized>
        <div class="to-row nav-bar">
            <div class="to-row ">
                <SmallLogo/>
                <div class="nav-link @(_selected == "" ? "active":"")" @onclick="@(() => { SetSelectedLink("");})">
                    <a href="" Match="NavLinkMatch.All" class="nav-link-item">
                        Home
                    </a>
                </div>

                <div class="nav-link @(_selected == "map" ? "active":"")" @onclick="@(() => { SetSelectedLink("map");})">
                    <a href="map" class="nav-link-item">
                        Map
                    </a>
                </div>

                <div class="nav-link @(_selected == "events" ? "active":"")" @onclick="@(() => { SetSelectedLink("events");})">
                    <a href="events" class="nav-link-item">
                        Events
                    </a>
                </div>

                <div class="nav-link @(_selected == "devices" ? "active":"")" @onclick="@(() => { SetSelectedLink("devices");})">
                    <a href="devices" class="nav-link-item">
                        Devices
                    </a>
                </div>
                <div class="nav-link @(_selected == "reports" ? "active":"")" @onclick="@(() => { SetSelectedLink("reports");})">
                    <a href="reports" class="nav-link-item">
                        Reports
                    </a>
                </div>
                <div class="nav-link @(_selected == "monitoring" ? "active":"")" @onclick="@(() => { SetSelectedLink("monitoring");})">
                    <a href="monitoring" class="nav-link-item">
                        Monitoring
                    </a>
                </div>
                <div class="nav-link @(_selected == "mibs" ? "active":"")" @onclick="@(() => { SetSelectedLink("mibs");})">
                    <a href="mibs" class="nav-link-item">
                        MIBs
                    </a>
                </div>
                <div class="nav-link @(_selected == "settings" ? "active":"")" @onclick="@(() => { SetSelectedLink("settings");})">
                    <a href="settings" class="nav-link-item" >
                        Settings
                    </a>
                </div>
            </div>
            <div>
                <form action="Account/Logout" method="post">
                    <AntiforgeryToken/>
                    <input type="hidden" name="ReturnUrl" value=""/>
                    <button type="submit" class="logout-btn">
                        Logout
                    </button>
                </form>
            </div>
        </div>
    </Authorized>
</AuthorizeView>

@code {
    private string _selected = string.Empty;

    private void SetSelectedLink(string link)
    {
        _selected = link;
    }
    
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }

}